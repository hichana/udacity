spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_plot <- spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# for (i in dir("files/spectral_readings_cleaned/")){
#   spectral_data = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
#   base <- ggplot(data=spectral_data, aes(x=WL,y=Power))
#   spectral_plot <- c + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
#   print(spectral_plot)
# }
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
# spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
# spectral_plot <- spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
print(spectral)
# for (i in dir("files/spectral_readings_cleaned/")){
#   spectral_data = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
#   base <- ggplot(data=spectral_data, aes(x=WL,y=Power))
#   spectral_plot <- c + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
#   print(spectral_plot)
# }
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_plot + spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# for (i in dir("files/spectral_readings_cleaned/")){
#   spectral_data = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
#   base <- ggplot(data=spectral_data, aes(x=WL,y=Power))
#   spectral_plot <- c + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
#   print(spectral_plot)
# }
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_plot + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# c <- ggplot(data=spectral, aes(x=WL,y=Power))
# c
for (i in dir("files/spectral_readings_cleaned/")){
spectral_data = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
print(spectral-data)
}
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_plot + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
for (i in dir("files/spectral_readings_cleaned/")){
spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
print(spectral)
}
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_plot + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# for (i in dir("files/spectral_readings_cleaned/")){
#   spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
#   spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
#   spectral_plot + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# }
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# for (i in dir("files/spectral_readings_cleaned/")){
#   spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
#   spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
#   spectral_plot + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# }
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_basejflkds + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# for (i in dir("files/spectral_readings_cleaned/")){
#   spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
#   spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
#   spectral_plot + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# }
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
for (i in dir("files/spectral_readings_cleaned/")){
spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
}
# spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
# spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
# spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
for (i in dir("files/spectral_readings_cleaned/")){
spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
}
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
for (i in dir("files/spectral_readings_cleaned/")){
spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
print(spectral)
# spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
# spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
}
spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
for (i in dir("files/spectral_readings_cleaned/")){
spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
print(spectral_base)
}
# spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
# spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
# spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
for (i in dir("files/spectral_readings_cleaned/")){
spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
# spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
print(spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal())
}
# spectral = read.csv("files/spectral_readings_cleaned/B1290025_dimyrum.csv")
# spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
# spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal()
# import declarations
library(ggplot2)
# plots each converted file
for (i in dir("files/spectral_readings_cleaned/")){
spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
print(spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal())
}
# converts files
for(i in dir("files/spectral_readings/")){
spectral = read.csv(paste("files/spectral_readings/",i,sep=""), col.names=c("WL","Power"))[c(17:2064),]
write.csv(spectral, file=paste("files/spectral_readings_cleaned/",i,sep=""),row.names=F)
}
# plots each converted file
for (i in dir("files/spectral_readings_cleaned/")){
spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
print(spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal())
}
# import declarations
library(ggplot2)
# converts files
for(i in dir("files/spectral_readings/")){
spectral = read.csv(paste("files/spectral_readings/",i,sep=""), col.names=c("WL","Power"))[c(17:2064),]
write.csv(spectral, file=paste("files/spectral_readings_cleaned/",i,sep=""),row.names=F)
}
# plots each converted file
for (i in dir("files/spectral_readings_cleaned/")){
spectral = read.csv(paste("files/spectral_readings_cleaned/",i,sep=""))
spectral_base <- ggplot(data=spectral, aes(x=WL,y=Power))
print(spectral_base + geom_path(size = 0.8, color = "#E46726") + theme_minimal())
}
# import declarations
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(png)
library(ggplot2)
set.seed(20)
ima <- readPNG("cockpit.png")
x <- rnorm(1000, mean=0, sd=.1)
y <- rnorm(1000, mean=0, sd=.1)
# plot(x,y, main="Rods and Cones")
# lim <- par()
# rasterImage(ima, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
# par(col="red", pch=16, cex =0.2)
# points(x,y)
df = data.frame(x,y)
ggplot(df, aes(x,y)) + geom_point(colour="red", size=.1) + xlim(-2,2) + ylim(-2,2)
# + annotation_custom(ima, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla","Matt Chana")
mystery = nchar(udacious)
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
source('~/GitHub/udacity/P4/lesson_files/demystifying.r', echo=TRUE)
source('~/GitHub/udacity/P4/lesson_files/demystifying.r', echo=TRUE)
View(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
?row.names
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
head(mtcars)
tail(mtcars, 3)
mtcars$mpg
mean(mtcars$mpg)
getcwd()
getwd()
statesInfo
statesInfo <- read.csv('statedata.csv')
setwd('~/Users/mchana/GitHub/udacity/P4/lesson_files')
statesInfo <- read.csv('statedata.csv')
statesInfo
getwd()
setwd('~/Users/mchana/GitHub/udacity/P4/lesson_files')
statesInfo <- read.csv('statedata.csv')
statesInfo
setwd('~/Users/mchana/GitHub/udacity/P4/lesson_files/')
statesInfo <- read.csv('statedata.csv')
statesInfo
getwd()
setwd('~/Users/mchana/GitHub/udacity/P4/lesson_files/')
source('~/GitHub/udacity/P4/lesson_files/playground.r', echo=TRUE)
setwd('/Users/mchana/GitHub/udacity/P4/lesson_files/')
statesInfo <- read.csv('statedata.csv')
statesInfo
summary(mtcars)
statesInfo
head(statesInfo)
head(statesInfo)
subset(statesInfo, state.region==1)
statesInfo[statesInfo$state.region == 1, ]
mtcars
efficient <- subset(mtcars, mpg >= 23.0)
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$mpg >=23.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$mpg >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$mpg >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$mpg >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
# efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
# efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efffsdakjficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficidsfent
efficient <- subset(mtcars, mpg >= 29.0)
# OR
# efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
efficient <- subset(mtcars, mpg >= 39.0)
# OR
# efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
efficient <- subset(mtcars, mpg >= 30.0)
# OR
# efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
efficient <- subset(mtcars, mpg >= 23.0)
# OR
# efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
# efficinet <- mtcars[mtcars$cyl >=100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$cyl >= 100.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$mpg >= 100.0, ]
efficient
summary(mtcars)
summary(mtcars)
efficinet <- mtcars[mtcars$mpg >= 100.0, ]
efficinet <- mtcars[mtcars$mpg >= 20.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$mpg >= 23.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
efficinet <- mtcars[mtcars$mpg >= 28.0, ]
efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
mtcars[mtcars$mpg >= 28.0, ]
# efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
mtcars[mtcars$mpg >= 99.0, ]
# efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
mtcars[mtcars$mpg >= 23.0, ]
# efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
mtcars[mtcars$mpg >= 30.0, ]
# efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
sliced_df <- mtcars[mtcars$mpg >= 30.0, ]
sliced_df
# efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
sliced_df <- mtcars[mtcars$mpg >= 20.0, ]
sliced_df
# efficient
# efficient <- subset(mtcars, mpg >= 23.0)
# OR
sliced_df <- mtcars[mtcars$mpg >= 30.0, ]
sliced_df
# efficient
efficient_sub <- subset(mtcars, mpg >= 23.0)
efficient_sub
efficient_slice <- mtcars[mtcars$mpg >= 30.0, ]
efficient_slice
efficient_slice <- mtcars[mtcars$mpg >= 10.0, ]
efficient_slice
efficient_slice <- mtcars[mtcars$mpg >= 1.0, ]
efficient_slice
efficient_sub <- subset(mtcars, mpg >= 23.0)
efficient_sub
count(efficient_sub)
efficient_sub <- subset(mtcars, mpg >= 23.0)
efficient_sub
# OR
efficient_slice <- mtcars[mtcars$mpg >= 1.0, ]
# efficient_slice
count(efficient_sub, vars="mpg")
library(plyr)
count(efficient_sub, vars="mpg")
library(plyr)
sum(count(efficient_sub, vars="mpg"))
library(plyr)
count(efficient_sub, vars="mpg")
# library(plyr)
# count(efficient_sub, vars="mpg")
table(efficient_sub)
# library(plyr)
# count(efficient_sub, vars="mpg")
table(efficient_sub$mpg)
# library(plyr)
# count(efficient_sub, vars="mpg")
sum(table(efficient_sub$mpg))
total_rows <- sum(table(efficient_sub$mpg))
print("Number of rows: " + total_rows)
total_rows <- sum(table(efficient_sub$mpg))
print(paste("Number of rows: ", total_rows, sep=""))
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qseq <= 16.9)
subset(mtcars, qsec <= 16.9)
lightCars <- subset(mtcars, wt < 2.0)
lightCars
mtcars$year <- 1974
mtcars$year <- 1974
mtcars
mtcars <- subset(mtcars, select = -year)
mtcars <- subset(mtcars, select = -year)
# mtcars <- subset(mtcars, select = -year)
mtcars
mtcars$year <- c(1973, 1974)
# mtcars$year <- c(1973, 1974)
mtcars
subset(mtcars, select =- year)
mtcars
mtcars <- subset(mtcars, select =- year)
mtcars
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
cond
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
mtcars
rm(cond)
rm(efficient)
hp_extremes <- subset(mtcars, mpg >= 30 | hp <= 60)
hp_extremes
source('~/GitHub/udacity/P4/lesson_files/reddit_survey.r', echo=TRUE)
source('~/GitHub/udacity/P4/lesson_files/reddit_survey.r', echo=TRUE)
source('~/GitHub/udacity/P4/lesson_files/reddit_survey.r', echo=TRUE)
source('~/GitHub/udacity/P4/lesson_files/reddit_survey.r', echo=TRUE)
str(reddit)
levels(reddit$age.range)
source('~/GitHub/udacity/P4/lesson_files/reddit_survey.r', echo=TRUE)
reddit$age.range
reddit$age.range <- ordered(reddit$age.range, levels = c('Under 18','18-24','25-34','35-44','45-54','55-64','65 or Above'))
qplot(data=reddit, x=age.range)
reddit$age.range <- factor(reddit$age.range, levels = c('Under 18','18-24','25-34','35-44','45-54','55-64','65 or Above'), ordered=T)
knitr::opts_chunk$set(echo = TRUE)
getwd()
getwd()
getwd()
list_files()
getwd()
list.files()
getwd()
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf
getwd()
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf
names
list.files()
getwd()
list.files()
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
names(pf)
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf
# names(pf)
names(pf)
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf
# names(pf)
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf
names(pf)
qplot(data=pf, x=dob_day)
qplot(data=pf, x=dob_day) + scale_x_discrete(breaks=1:31)
ggplot(data=pf, aes(x=dob_day)) + geom_histogram(binwidth = 1) + scale_x_continuous(breaks = 1:31)
ggplot(data=pf, aes(x=dob_day)) + geom_histogram(binwidth = 1) + scale_x_continuous(breaks = 1:31)
ggplot(data=pf, aes(x=dob_day))
+ geom_histogram(binwidth = 1) + scale_x_continuous(breaks = 1:31)
ggplot(data=pf, aes(x=dob_day))
+ geom_histogram(binwidth = 1) + scale_x_continuous(breaks = 1:31)
ggplot(data=pf, aes(x=dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(data=pf, aes(x=dob_day)) +
scale_x_continuous(breaks = 1:31)
ggplot(data=pf, aes(x=dob_day)) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month, ncol = 3)
ggplot(data=pf, aes(x=dob_day)) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month, ncol = 3)
ggplot(data=pf, aes(x=dob_day)) +
scale_x_continuous(breaks = 1:31) +
geom_histogram(binwidth = 1) +
facet_wrap(~dob_month, ncol = 3)
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf
# names(pf)
ggplot(data=pf, aes(x=dob_day)) +
scale_x_continuous(breaks = 1:31) +
geom_histogram(binwidth = 1) +
facet_wrap(~dob_month, ncol = 3)
ggplot(data=pf, aes(x=friend_count))
ggplot(data=pf, aes(x=friend_count)) +
geom_histogram(binwidth = 1)
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
# pf
names(pf)
ggplot(data=pf, aes(x=friend_count)) +
geom_histogram(binwidth = 1) +
facet_wrap(~gender, ncol = 3)
ggplot(data=subset(pf, !is.na(gender)), aes(x=friend_count)) +
geom_histogram(binwidth = 1) +
facet_wrap(~gender, ncol = 3)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
