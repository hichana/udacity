filter1 <- filter(tib, x > 1)
filter1
filter2 <- filter(tib, is.na(x) | x > 1)
filter2
tib
sort_na <- arrange(tib, desc(x))
tib
sort_na <- arrange(tib, desc(x))
sort_na
sort_na <- arrange(tib, desc(x))
sort_na
col_select <- select(flights, year, month, day)
col_select
col_range <- select(flights, year:day)
col_range <- select(flights, year:day)
col_range
col_range <- select(flights, -(year:day))
col_range
col_range <- select(flights, -(year:day))
col_range
# View(flights)
rename(flights, tail_num = tailnum)
flights
# rename(flights, tail_num = tailnum)
# rename(flights, tail_num = tailnum)
# changes 'tailnum' to 'tail_num'
rename(flights, tailnum = tail_num)
# changes 'tailnum' to 'tail_num'
# notice variable accessed on right of equal sign
rename(flights, tail_num = tailnum)
reorder_flights <- select(flights, time_hour, everything())
reorder_flights
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time)
flights_sml
mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
flights_sml.names
mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
flights_sml.names()
mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
names(flights_sml)
flights_sml2 <- mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
names(flights_sml2)
flights_sml2 <- mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60,
gain_per_hour = gain / hours)
flights_sml2 <- mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hours)
names(flights_sml2)
flights_sml2 <- mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hours)
names(flights_sml2)
flights_sml2
my_comps <- transmute(
flights,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
my_comps
departure_times <- transmute(
flights,
dep_time,
hour = dep_time %/% 100,
minute = dep_time %% 100
)
departure_times
(x <- 1:10)
x <- 1:10
x
lag(x)
?lag()
lag(x)
lag(x)
lag(x)
lag(x)
lag(x)
lag(x)
lag(x,x)
lag(x)
lag(x)
lag(x)
lag(x)
lag(x)
lag(x) - lead(x)
lead(x)
x
cumsum(x)
cummean(x)
y <- c(1, 2, 2, NA, 3, 4)
min_rank(y)
y <- c(1, 2, 2, NA, 3, 4)
min_rank(y)
min_rank(desc(y))
row_number(y)
dense_rank(y)
percent_rank(y)
cume_dist(y)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
?mean()
# note, na.rm set to TRUE strips NA values before computation
sumdfkjmarise(flights, delay = mean(dep_delay, na.rm = TRUE))
# note, na.rm set to TRUE strips NA values before computation
summarize(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
flights
by_dest <- group_by(flights, dest)
by_dest
?n()
unique(flights$carrier)
unique(flights$year)
grouped_by_flights <- group_by(
flights,
year
)
grouped_by_flights
summarize(
grouped_by_flights,
count = n()
)
summarize(
grouped_by_flights,
dist = mean(distance, na.rm = TRUE)
)
mean(flights$distance)
delay <- summarize(
by_dest,
# number of operations in the current group
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay
delay <- filter(delay, count > 20, dest != "HNL")
delay <- filter(delay, count > 20, dest != "HNL")
delay
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays
knitr::opts_chunk$set(echo = TRUE)
flights %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay))
knitr::opts_chunk$set(echo = TRUE)
y <- seq(1,10, length.out = 5)
y
(y <- seq(1,10, length.out = 5))
my_variable <- 10
my_variable
library(nycflights13)
library(tidyverse)
flights
# View(flights)
jan_1st <- filter(flights, month == 1, day == 1)
jan_1st
sqrt(2) ^ 2 == 2
near(sqrt(2) ^ 2, 2)
nov_dec <- filter(flights, month == 11 | month == 12)
nov_dec
unique(nov_dec$month)
nov_dec_in <- filter(flights, month %in% c(11, 12))
nov_dec_in
unique(nov_dec_in$month)
filter(flights, !(arr_delay > 120 | dep_delay > 120))
filter(flights, arr_delay <= 120, dep_delay <= 120)
tib <- tibble(x = c(1, 2, NA, 3))
tib
filter1 <- filter(tib, x > 1)
filter1
filter2 <- filter(tib, is.na(x) | x > 1)
filter2
arrange(flights, year, month, day)
arrange(flights, desc(arr_delay))
sort_na <- arrange(tib, desc(x))
sort_na
col_select <- select(flights, year, month, day)
col_select
col_range <- select(flights, year:day)
col_range
col_range <- select(flights, -(year:day))
col_range
# changes 'tailnum' to 'tail_num'
# notice variable accessed on right of equal sign
rename(flights, tail_num = tailnum)
reorder_flights <- select(flights, time_hour, everything())
reorder_flights
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time)
flights_sml
flights_sml2 <- mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hours)
names(flights_sml2)
flights_sml2
my_comps <- transmute(
flights,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
my_comps
departure_times <- transmute(
flights,
dep_time,
hour = dep_time %/% 100,
minute = dep_time %% 100
)
departure_times
x <- 1:10
x
lag(x)
lead(x)
x
# cumulative sum across the data
cumsum(x)
cummean(x)
y <- c(1, 2, 2, NA, 3, 4)
min_rank(y)
min_rank(desc(y))
row_number(y)
dense_rank(y)
percent_rank(y)
cume_dist(y)
# note, na.rm set to TRUE strips NA values before computation
summarize(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
flights
by_dest <- group_by(flights, dest)
by_dest
unique(flights$year)
grouped_by_flights <- group_by(
flights,
year
)
grouped_by_flights
summarize(
grouped_by_flights,
count = n()
)
summarize(
grouped_by_flights,
dist = mean(distance, na.rm = TRUE)
)
mean(flights$distance)
delay <- summarize(
by_dest,
# number of operations in the current group
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay
delay <- filter(delay, count > 20, dest != "HNL")
delay
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays
flights %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay))
unique(flights$dep_delay)
flights %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay, na.rm = TRUE))
subset(flights, month == 1, day == 1)
?subset()
subset(flights, month = 1, day = 1)
flights
subset(flights, month = 1 & day = 1)
subset(flights, month == 1 & day == 1)
jan_1 <- subset(flights, month == 1 & day == 1)
jan_1
unique(jan_1$dep_delay)
jan_1 <- subset(flights, month == 2 & day == 1)
jan_1
unique(jan_1$dep_delay)
jan_1 <- subset(flights, month == 1 & day == 1)
jan_1
jan_2 <- subset(flights, month == 2 & day == 1)
jan_2
unique(jan_2$dep_delay)
flights %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay, na.rm = TRUE))
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled
not_cancelled %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay))
not_cancelled
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay)
ggplot(data = delays, mapping = aes(x = delay)) +
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay))
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay))
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay))
delays
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay, na.rm = TRUE),
n = n()
)
delays
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
delays %>%
filter(n > 25) %>%
ggplot(mapping = aes(x=n, y = delay)) +
geom_point(alpha = 1/10)
delays %>%
filter(n > 100) %>%
ggplot(mapping = aes(x=n, y = delay)) +
geom_point(alpha = 1/10)
delays %>%
filter(n > 25) %>%
ggplot(mapping = aes(x=n, y = delay)) +
geom_point(alpha = 1/10)
batting <- Lahman::Batting
batting <- Lahman::Batting
batting
# batting <- Lahman::Batting
batting <- as_tibble(Lahman::Batting)
batting
batting <- Lahman::Batting
# batting <- as_tibble(Lahman::Batting)
batting
batting <- as_tibble(Lahman::Batting)
batting
batters <- batting %>%
group_by(playerID) %>%
summarize(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
batters
batter %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
batters %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
batters %>%
arrange(desc(ba))
not_cancelled %>%
group_by(year, month, day) %>%
summarize(
avg_delay1 = mean(arr_delay),
avg_delay2 = mean(arr_delay[arr_delay > 0])
)
not_cancelled %>%
group_by(dest) %>%
summarize(distance_sd = sd(distance)) %>%
arrange(desc(distance_sd))
not_cancelled %>%
group_by(year, month, day) %>%
summarize(
first = min(dep_time),
last = max(dep_time)
)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(
first_dep = first(dep_time),
last_dep = last(dep_time)
)
not_cancelled %>%
group_by(year, month, day) %>%
mutate(r = min_rank(desc(dep_time))) %>%
filter(r %in% range(r))
not_cancelled %>%
group_by(dest) %>%
summarise(carriers = n_distinct(carrier)) %>%
arrange(desc(carriers))
not_cancelled %>%
count(dest)
not_cancelled %>%
count(tailnum, wt = distance)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(n_early = sum(dep_time < 500))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(hour_perc = mean(arr_delay > 60))
daily <- group_by(flights, year, month, day)
per_day <- summarize(daily, flights = n())
per_day
daily <- group_by(flights, year, month, day)
per_day <- summarize(daily, flights = n())
per_day
per_month <- summarize(daily, flights = sum(flights)
daily <- group_by(flights, year, month, day)
per_day <- summarize(daily, flights = n())
per_day
per_month <- summarize(daily, flights = sum(flights))
daily <- group_by(flights, year, month, day)
per_day <- summarize(daily, flights = n())
per_day
per_month <- summarize(per_day, flights = sum(flights))
per_month
daily <- group_by(flights, year, month, day)
per_day <- summarize(daily, flights = n())
per_day
per_month <- summarize(per_day, flights = sum(flights))
per_month
per_year <- summarize(per_month, flights = sum(flights))
per_year
daily %>%
ungroup() %>%
summarize(flights = n())
flights_sml %>%
group_by(year, month, day) %>%
filter(rank(desc(arr_delay)) < 10)
popular_dests <- flights %>%
group_by(dest) %>%
filter(n() > 365)
popular_dests
popular_dests %>%
filter(arr_delay > 0) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
select(year:day, dest, arr_delay, prop_delay)
source('~/.active-rstudio-document', echo=TRUE)
