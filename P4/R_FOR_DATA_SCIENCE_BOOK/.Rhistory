fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
geom = "freqpoly", # default geom
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
geom = "geom_freqpoly", # default geom
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
geom = "pointrange", # default geom
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds, mapping = aes(x = cut, y = depth)) +
geom_line() +
stat_summary(fun.y = "median", geom = "point", size = 3)
ggplot(data = diamonds, mapping = aes(x = cut, y = depth)) +
geom_line() +
stat_summary(fun.y = "median", geom = "point", size = 5)
ggplot(data = diamonds, mapping = aes(x = cut, y = depth)) +
geom_line() +
stat_summary(fun.y = "median", geom = "point", size = 4.5)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut))
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_col(mapping = aes(x = cut, y = freq), stat = "identity")
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_col(mapping = aes(x = cut, y = freq))
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_col(mapping = aes(x = cut, y = freq))
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_col(mapping = aes(x = cut, y = freq))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 2))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
# geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, color = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, colour = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity, position = "fill"))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping=aes(x=displ,y=hwy))
ggplot(data = mpg) +
geom_point(mapping=aes(x=displ,y=hwy), position = "jitter")
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
nz <- map_data("nz")
install.packages("maps")
nz <- map_data("nz")
ggplot(nz, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
ggplot(nz, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black") +
coord_quickmap()
ggplot(nz, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black") +
coord_quickmap()
nz <- map_data("nz")
ggplot(nz, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
ggplot(nz, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black") +
coord_quickmap()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
# bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
# bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_polar()
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
this_is_a_really_long_name <- 2.5
this_is_a_really_long_name
seq(1,10)
seq(1,10, length.out = 5)
y <- seq(1,10, length.out = 5)
y
(y <- seq(1,10, length.out = 5))
my_variable <- 10
my_variable
knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
library(tidyverse)
flights
View(flights)
filter(flights, month == 1, day == 1)
jan_1st <- filter(flights, month == 1, day == 1)
jan_1st
sqrt(2) ^ 2 == 2
near(sqrt(2) ^ 2 == 2)
near(sqrt(2) ^ 2, 2)
nov_dec <- (flights, month == 11 | month == 12)
nov_dec <- filter(flights, month == 11 | month == 12)
nov_dec
nov_dec <- filter(flights, month %in% c(11, 12))
nov_dec
knitr::opts_chunk$set(echo = TRUE)
nov_dec <- filter(flights, month == 11 | month == 12)
library(nycflights13)
library(tidyverse)
nov_dec <- filter(flights, month == 11 | month == 12)
nov_dec
nov_dec <- filter(flights, month == 11 | month == 12)
View(nov_dec)
nov_dec <- filter(flights, month == 11 | month == 12)
nov_dec
?subset
unique(nov_dec$month)
nov_dec_in <- filter(flights, month %in% c(11, 12))
nov_dec_in
unique(nov_dec_in$month)
filter(flights, !(arr_delay > 120 | dep_delay > 120))
filter(flights, arr_delay <= 120, dep_delay <= 120)
filter(flights, arr_delay <= 120, dep_delay <= 120, sched_dep_time == 515)
filter(flights, arr_delay <= 120, dep_delay <= 120)
df <- tibble(x = c(1, NA, 3))
df
filter(df, x > 1)
filter(df, is.na(x) | x > 1)
filter(df, x > 0)
filter(df, is.na(x) | x > 1)
filter(df, x > 1)
filter(df, is.na(x) | x > 1)
filter1 <- filter(df, x > 1)
filter1
filter2 <- filter(df, is.na(x) | x > 1)
filter2
arrange(flights, year, month, day)
arrange(flights, year, month)
arrange(flights, year, month, day)
arrange(flights, desc(arr_delay))
arrange(flights, year, month, desc(day))
arrange(flights, year, month, day)
sort_na <- arrange(df, desc(x))
sort_na <- arrange(df, desc(x))
sort_na
df
df <- tibble(x = c(1, NA, 3))
df
tib <- tibble(x = c(1, NA, 3))
tib
tib <- tibble(x = c(1, ,4, NA, 3))
tib <- tibble(x = c(1, 2, NA, 3))
tib
filter1 <- filter(tib, x > 1)
filter1
filter2 <- filter(tib, is.na(x) | x > 1)
filter2
tib
sort_na <- arrange(tib, desc(x))
tib
sort_na <- arrange(tib, desc(x))
sort_na
sort_na <- arrange(tib, desc(x))
sort_na
col_select <- select(flights, year, month, day)
col_select
col_range <- select(flights, year:day)
col_range <- select(flights, year:day)
col_range
col_range <- select(flights, -(year:day))
col_range
col_range <- select(flights, -(year:day))
col_range
# View(flights)
rename(flights, tail_num = tailnum)
flights
# rename(flights, tail_num = tailnum)
# rename(flights, tail_num = tailnum)
# changes 'tailnum' to 'tail_num'
rename(flights, tailnum = tail_num)
# changes 'tailnum' to 'tail_num'
# notice variable accessed on right of equal sign
rename(flights, tail_num = tailnum)
reorder_flights <- select(flights, time_hour, everything())
reorder_flights
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time)
flights_sml
mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
flights_sml.names
mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
flights_sml.names()
mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
names(flights_sml)
flights_sml2 <- mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
names(flights_sml2)
flights_sml2 <- mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60,
gain_per_hour = gain / hours)
flights_sml2 <- mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hours)
names(flights_sml2)
flights_sml2 <- mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hours)
names(flights_sml2)
flights_sml2
my_comps <- transmute(
flights,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
my_comps
departure_times <- transmute(
flights,
dep_time,
hour = dep_time %/% 100,
minute = dep_time %% 100
)
departure_times
(x <- 1:10)
x <- 1:10
x
lag(x)
?lag()
lag(x)
lag(x)
lag(x)
lag(x)
lag(x)
lag(x)
lag(x,x)
lag(x)
lag(x)
lag(x)
lag(x)
lag(x)
lag(x) - lead(x)
lead(x)
x
cumsum(x)
cummean(x)
y <- c(1, 2, 2, NA, 3, 4)
min_rank(y)
y <- c(1, 2, 2, NA, 3, 4)
min_rank(y)
min_rank(desc(y))
row_number(y)
dense_rank(y)
percent_rank(y)
cume_dist(y)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
?mean()
# note, na.rm set to TRUE strips NA values before computation
sumdfkjmarise(flights, delay = mean(dep_delay, na.rm = TRUE))
# note, na.rm set to TRUE strips NA values before computation
summarize(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
flights
by_dest <- group_by(flights, dest)
by_dest
?n()
unique(flights$carrier)
unique(flights$year)
grouped_by_flights <- group_by(
flights,
year
)
grouped_by_flights
summarize(
grouped_by_flights,
count = n()
)
summarize(
grouped_by_flights,
dist = mean(distance, na.rm = TRUE)
)
mean(flights$distance)
delay <- summarize(
by_dest,
# number of operations in the current group
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay
delay <- filter(delay, count > 20, dest != "HNL")
delay <- filter(delay, count > 20, dest != "HNL")
delay
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays
